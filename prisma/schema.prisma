// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Tabla de sesiones de Shopify (requerida por shopify-app-session-storage-prisma)
model Session {
  id            String   @id @default(cuid())
  shop          String
  state         String
  isOnline      Boolean  @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt? // Usar BigInt? para compatibilidad con IDs de usuario de Shopify
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean  @default(false)
  locale        String?
  collaborator  Boolean? @default(false)
  emailVerified Boolean? @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Shop {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_domain       String   @unique
  access_token      String?
  subscription_plan String? // Ejemplo: 'FREE', 'BASIC', etc.
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now())

  // Relaciones
  chatbotConfigurations ChatbotConfiguration[]
  conversations        ChatConversation[]
}

model ChatbotConfiguration {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_id         String   @db.Uuid
  bot_name        String?
  welcome_message String?
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now())

  // Relaciones
  shop Shop @relation(fields: [shop_id], references: [id])
}

model ChatConversation {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_id         String   @db.Uuid
  customer_email  String?
  session_id      String?
  status          String?  // Ejemplo: 'active', 'ended'mv
  started_at      DateTime @default(now())
  ended_at        DateTime?
  created_at      DateTime @default(now())

  // Relaciones
  shop     Shop         @relation(fields: [shop_id], references: [id])
  messages ChatMessage[]
}

model ChatMessage {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  conversation_id String   @db.Uuid
  sender_type     String   // Ejemplo: 'bot' o 'customer'
  message_content String
  created_at      DateTime @default(now())

  // Relaciones
  conversation ChatConversation @relation(fields: [conversation_id], references: [id])
}

