// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Tabla de sesiones de Shopify (requerida por shopify-app-session-storage-prisma)
model Session {
  id            String   @id @default(cuid())
  shop          String
  state         String
  isOnline      Boolean  @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt? // Usar BigInt? para compatibilidad con IDs de usuario de Shopify
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean  @default(false)
  locale        String?
  collaborator  Boolean? @default(false)
  emailVerified Boolean? @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum SubscriptionPlan {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
}

enum TicketStatus {
  PENDING    // Esperando que un agente lo atienda
  IN_PROGRESS // Agente asignado y atendiendo
  RESOLVED   // Resuelto por el agente
  CLOSED     // Cerrado
}

model Shop {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_domain       String   @unique
  access_token      String?
  subscription_plan SubscriptionPlan? @default(BASIC)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // Relaciones
  chatbotConfigurations ChatbotConfiguration[]
  tickets              Ticket[]
}

model ChatbotConfiguration {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_id         String   @db.Uuid
  bot_name        String   @default("Verify")
  welcome_message String   @default("Hola! Estoy aquí para ayudarte.")
  webhook_url     String?  
  is_active       Boolean  @default(true)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  // Relaciones
  shop Shop @relation(fields: [shop_id], references: [id])
}

model Ticket {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  shop_id         String   @db.Uuid
  session_id      String?  // ID de la sesión de chat relacionada
  customer_email  String   // Email del cliente que solicita atención
  subject         String   // Asunto o motivo de la solicitud
  message         String   // Mensaje inicial del cliente
  status          TicketStatus @default(PENDING)
  agent_id        String?  // ID del agente asignado
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  assigned_at     DateTime? // Cuando se asignó a un agente
  resolved_at     DateTime?
  closed_at       DateTime?

  // Relaciones
  shop Shop @relation(fields: [shop_id], references: [id])
}

